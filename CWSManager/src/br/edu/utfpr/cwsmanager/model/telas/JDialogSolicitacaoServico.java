/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.utfpr.cwsmanager.model.telas;

import br.edu.utfpr.cwsmanager.model.config.DaoGenerics;
import br.edu.utfpr.cwsmanager.model.config.Filter;
import br.edu.utfpr.cwsmanager.model.config.Operator;
import br.edu.utfpr.cwsmanager.model.config.TransactionManager;
import br.edu.utfpr.cwsmanager.model.movimentacao.SolicitacaoServico;
import br.edu.utfpr.cwsmanager.model.movimentacao.TipoServico;
import br.edu.utfpr.cwsmanager.model.pessoa.Cliente;
import br.edu.utfpr.cwsmanager.model.pessoa.Funcionario;
import br.edu.utfpr.cwsmanager.model.util.UtilDatas;
import br.edu.utfpr.cwsmanager.model.veiculo.Veiculo;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EduardoGreco
 */
public class JDialogSolicitacaoServico extends javax.swing.JDialog {

    /**
     * Creates new form JDialogSolicitacaoServico
     */
    private List<Cliente> clientes;
    private UtilDatas converteData = new UtilDatas();
    private List<Funcionario> funcionarios;
    private List<TipoServico> tipoServicos;
    public Cliente cliente;
    public Veiculo veiculo = null;
    public Funcionario funcionario;
    public TipoServico tipoServico;
    public SolicitacaoServico solicitacaoServico;
    private List<SolicitacaoServico> solicitacaoServicos = new ArrayList<SolicitacaoServico>();
    private DefaultTableModel tabelaConsulta;

    public JDialogSolicitacaoServico(java.awt.Frame parent, boolean modal, boolean consulta) {
        super(parent, modal);
        initComponents();
        if (consulta) {
            jTabbedPane1.setEnabledAt(0, !consulta);
            jTabbedPane1.setSelectedIndex(1);
        }

        habilitaCampos(true);
        HoraData();
        preencherTipoServico();
        jComboBoxVeiculo.removeAllItems();

        tabelaConsulta = (DefaultTableModel) jTableConsultaSS.getModel();
        tabelaConsulta.setNumRows(0);

        pesquisa();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelCadastro = new javax.swing.JPanel();
        jLabelCodCliente = new javax.swing.JLabel();
        jLabelNomeCliente = new javax.swing.JLabel();
        jLabelCpfCliente = new javax.swing.JLabel();
        jLabelDataNascCliente = new javax.swing.JLabel();
        jLabelTelPessoalCliente = new javax.swing.JLabel();
        jLabelTelComercialCliente = new javax.swing.JLabel();
        jLabelEmailCliente = new javax.swing.JLabel();
        jTextFieldIdSS = new javax.swing.JTextField();
        jFormattedTextFieldData = new javax.swing.JFormattedTextField();
        jComboBoxStatus = new javax.swing.JComboBox();
        jComboBoxTipoServico = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxVeiculo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaObs = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldHora = new javax.swing.JTextField();
        jTextFieldiDfuncionario = new javax.swing.JTextField();
        jTextFieldNomeFuncionario = new javax.swing.JTextField();
        jTextFieldIdCliente = new javax.swing.JTextField();
        jTextFieldNomeCliente = new javax.swing.JTextField();
        jButtonPesquisarFuncionario = new javax.swing.JButton();
        jButtonPesquisaClient = new javax.swing.JButton();
        jButtonSairCad = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonGravar = new javax.swing.JButton();
        jButtonIncluir = new javax.swing.JButton();
        jButtonAddFuncionario = new javax.swing.JButton();
        jButtonAddCliente = new javax.swing.JButton();
        jPanelConsulta = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextFieldPesquisa = new javax.swing.JFormattedTextField();
        jComboBoxTipoConsultaSS = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableConsultaSS = new javax.swing.JTable();
        jButtonPesquisarCliente1 = new javax.swing.JButton();
        jButtonGerarOrdem = new javax.swing.JButton();
        jButtonSairConsul = new javax.swing.JButton();
        jButtonExcluirSSAberto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Solicitação de Serviço");

        jLabelCodCliente.setText("Código:");

        jLabelNomeCliente.setText("Funcionário Solicitante:");

        jLabelCpfCliente.setText("Status");

        jLabelDataNascCliente.setText("Data:");

        jLabelTelPessoalCliente.setText("Tipo de Servico:");

        jLabelTelComercialCliente.setText("Cliente:");

        jLabelEmailCliente.setText("Veículo:");

        try {
            jFormattedTextFieldData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldData.setMinimumSize(new java.awt.Dimension(42, 28));
        jFormattedTextFieldData.setPreferredSize(new java.awt.Dimension(42, 28));
        jFormattedTextFieldData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldDataActionPerformed(evt);
            }
        });

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aberto", "Em Andamento", "Encerrado" }));

        jComboBoxTipoServico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxTipoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoServicoActionPerformed(evt);
            }
        });

        jLabel1.setText("Observaçao:");

        jComboBoxVeiculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVeiculoActionPerformed(evt);
            }
        });

        jTextAreaObs.setColumns(20);
        jTextAreaObs.setRows(5);
        jScrollPane2.setViewportView(jTextAreaObs);

        jLabel2.setText("Hora:");

        jTextFieldiDfuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldiDfuncionarioActionPerformed(evt);
            }
        });
        jTextFieldiDfuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldiDfuncionarioFocusLost(evt);
            }
        });

        jTextFieldIdCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdClienteActionPerformed(evt);
            }
        });
        jTextFieldIdCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIdClienteFocusLost(evt);
            }
        });

        jButtonPesquisarFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisa.png"))); // NOI18N
        jButtonPesquisarFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarFuncionarioActionPerformed(evt);
            }
        });

        jButtonPesquisaClient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisa.png"))); // NOI18N
        jButtonPesquisaClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisaClientActionPerformed(evt);
            }
        });

        jButtonSairCad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        jButtonSairCad.setText("Sair");
        jButtonSairCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairCadActionPerformed(evt);
            }
        });

        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        jButtonGravar.setText("Gravar");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });

        jButtonIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        jButtonIncluir.setText("Incluir");
        jButtonIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirActionPerformed(evt);
            }
        });

        jButtonAddFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        jButtonAddFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddFuncionarioActionPerformed(evt);
            }
        });

        jButtonAddCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        jButtonAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddClienteActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelCadastroLayout = new org.jdesktop.layout.GroupLayout(jPanelCadastro);
        jPanelCadastro.setLayout(jPanelCadastroLayout);
        jPanelCadastroLayout.setHorizontalGroup(
            jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelCadastroLayout.createSequentialGroup()
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(34, 34, 34)
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelNomeCliente)
                            .add(jLabelDataNascCliente)
                            .add(jLabelCodCliente)
                            .add(jLabel1)
                            .add(jLabelEmailCliente)
                            .add(jLabelTelPessoalCliente)
                            .add(jLabelTelComercialCliente)))
                    .add(jButtonIncluir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jButtonSairCad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jTextFieldIdSS, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .add(jFormattedTextFieldData, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelCpfCliente)
                            .add(jLabel2))
                        .add(18, 18, 18)
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jTextFieldHora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jComboBoxStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(70, 70, 70))
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanelCadastroLayout.createSequentialGroup()
                                .add(jTextFieldIdCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jTextFieldNomeCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonPesquisaClient)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonAddCliente))
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 332, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jComboBoxVeiculo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 296, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jPanelCadastroLayout.createSequentialGroup()
                                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanelCadastroLayout.createSequentialGroup()
                                        .add(286, 286, 286)
                                        .add(jButtonGravar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanelCadastroLayout.createSequentialGroup()
                                        .add(jTextFieldiDfuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jTextFieldNomeFuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonPesquisarFuncionario)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jButtonAddFuncionario)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jComboBoxTipoServico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 296, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(190, Short.MAX_VALUE))))
        );
        jPanelCadastroLayout.setVerticalGroup(
            jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelCadastroLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextFieldIdSS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelCodCliente)
                    .add(jLabelCpfCliente)
                    .add(jComboBoxStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelDataNascCliente)
                    .add(jFormattedTextFieldData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(jTextFieldHora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jTextFieldiDfuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabelNomeCliente)
                        .add(jTextFieldNomeFuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jButtonPesquisarFuncionario)
                    .add(jButtonAddFuncionario, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(27, 27, 27)
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxTipoServico, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelTelPessoalCliente))
                .add(20, 20, 20)
                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(jButtonAddCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jButtonSairCad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButtonCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButtonIncluir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jButtonGravar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .add(jPanelCadastroLayout.createSequentialGroup()
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanelCadastroLayout.createSequentialGroup()
                                .add(jButtonPesquisaClient)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanelCadastroLayout.createSequentialGroup()
                                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabelTelComercialCliente)
                                    .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(jTextFieldIdCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jTextFieldNomeCliente, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                                .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabelEmailCliente)
                                    .add(jComboBoxVeiculo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(27, 27, 27)))
                        .add(jPanelCadastroLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(65, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Cadastrar", jPanelCadastro);

        jLabel12.setText("Consulta por:");

        jFormattedTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldPesquisaActionPerformed(evt);
            }
        });

        jComboBoxTipoConsultaSS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cód. Solicitação", "Funcionário Solicitante", "Cliente", "Status" }));

        jTableConsultaSS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Status", "Data", "Solicitante", "Tipo de Serviço", "Cliente", "Veículo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConsultaSS.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableConsultaSS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableConsultaSSMousePressed(evt);
            }
        });
        jTableConsultaSS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableConsultaSSKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableConsultaSS);
        jTableConsultaSS.getColumnModel().getColumn(0).setPreferredWidth(2);
        jTableConsultaSS.getColumnModel().getColumn(1).setPreferredWidth(5);
        jTableConsultaSS.getColumnModel().getColumn(2).setPreferredWidth(25);

        jButtonPesquisarCliente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisa.png"))); // NOI18N
        jButtonPesquisarCliente1.setToolTipText("Pesquisar Cliente");
        jButtonPesquisarCliente1.setMaximumSize(new java.awt.Dimension(42, 28));
        jButtonPesquisarCliente1.setMinimumSize(new java.awt.Dimension(42, 28));
        jButtonPesquisarCliente1.setPreferredSize(new java.awt.Dimension(42, 28));
        jButtonPesquisarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarCliente1ActionPerformed(evt);
            }
        });

        jButtonGerarOrdem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        jButtonGerarOrdem.setText("Gerar Ordem");
        jButtonGerarOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarOrdemActionPerformed(evt);
            }
        });

        jButtonSairConsul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        jButtonSairConsul.setText("Sair");
        jButtonSairConsul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairConsulActionPerformed(evt);
            }
        });

        jButtonExcluirSSAberto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/excluir.png"))); // NOI18N
        jButtonExcluirSSAberto.setText("Exluir");
        jButtonExcluirSSAberto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirSSAbertoActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelConsultaLayout = new org.jdesktop.layout.GroupLayout(jPanelConsulta);
        jPanelConsulta.setLayout(jPanelConsultaLayout);
        jPanelConsultaLayout.setHorizontalGroup(
            jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelConsultaLayout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelConsultaLayout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jButtonExcluirSSAberto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(483, 483, 483)
                        .add(jButtonGerarOrdem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonSairConsul, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 104, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanelConsultaLayout.createSequentialGroup()
                            .add(jLabel12)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jComboBoxTipoConsultaSS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                            .add(jFormattedTextFieldPesquisa)
                            .add(18, 18, 18)
                            .add(jButtonPesquisarCliente1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 832, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanelConsultaLayout.setVerticalGroup(
            jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelConsultaLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel12)
                        .add(jComboBoxTipoConsultaSS, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jFormattedTextFieldPesquisa, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jButtonPesquisarCliente1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(jPanelConsultaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonGerarOrdem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonSairConsul, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonExcluirSSAberto, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta", jPanelConsulta);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 907, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFormattedTextFieldDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldDataActionPerformed

    private void jButtonPesquisarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarCliente1ActionPerformed
        pesquisa();
    }//GEN-LAST:event_jButtonPesquisarCliente1ActionPerformed

    private void jButtonSairConsulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairConsulActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButtonSairConsulActionPerformed

    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        if (!validaCampos()) {
            return;
        }
        gravar();
        JOptionPane.showMessageDialog(null, "Registro gravado com sucesso.", "Gravar", JOptionPane.INFORMATION_MESSAGE);
        clearCampos();
        habilitaCampos(false);
        jTextFieldHora.setEnabled(false);
        jFormattedTextFieldData.setEnabled(false);
        jTextFieldIdSS.setEnabled(false);
        jComboBoxStatus.setEnabled(false);
        jButtonGerarOrdem.setEnabled(true);
        jButtonSairConsul.setEnabled(true);
        jTextFieldNomeCliente.setEnabled(false);
        jTextFieldNomeFuncionario.setEnabled(false);
        pesquisa();
    }//GEN-LAST:event_jButtonGravarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        try {
            TransactionManager.rollback();
        } catch (Exception e) {
        }
        habilitaCampos(true);
        clearCampos();
        HoraData();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonGerarOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarOrdemActionPerformed
        int linha = jTableConsultaSS.getSelectedRow();

        if (linha < 0) {
            JOptionPane.showMessageDialog(null, "Selecione um registro.", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }

        solicitacaoServico = solicitacaoServicos.get(linha);

        JDialogCadOrdemServico gerarOrdem = new JDialogCadOrdemServico(this, true);
        gerarOrdem.setLocationRelativeTo(gerarOrdem);
        gerarOrdem.preencherCadOrdem(solicitacaoServico);
        gerarOrdem.setVisible(true);
        
        dispose();


    }//GEN-LAST:event_jButtonGerarOrdemActionPerformed

    private void jButtonIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirActionPerformed
        clearCampos();
        habilitaCampos(true);
        HoraData();
        preencherTipoServico();
        jComboBoxVeiculo.removeAllItems();

        tabelaConsulta = (DefaultTableModel) jTableConsultaSS.getModel();
        tabelaConsulta.setNumRows(0);

        pesquisa();
    }//GEN-LAST:event_jButtonIncluirActionPerformed

    private void jComboBoxVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVeiculoActionPerformed
        veiculo = (Veiculo) jComboBoxVeiculo.getModel().getSelectedItem();

    }//GEN-LAST:event_jComboBoxVeiculoActionPerformed

    private void jComboBoxTipoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoServicoActionPerformed
        if (jComboBoxTipoServico.getSelectedItem() instanceof TipoServico) {
            tipoServico = (TipoServico) jComboBoxTipoServico.getSelectedItem();
        }
    }//GEN-LAST:event_jComboBoxTipoServicoActionPerformed

    private void jTextFieldIdClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIdClienteFocusLost
        int id_cliente = 0;

        try {
            id_cliente = Integer.parseInt(jTextFieldIdCliente.getText().trim());
        } catch (Exception e) {
            return;
        }

        try {
            cliente = new DaoGenerics<Cliente>(Cliente.class).retrieve(id_cliente);
            if (cliente.getId() == 0) {
                JOptionPane.showMessageDialog(null, "Código do cliente não cadastrado", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTextFieldIdCliente.setText("");
                jTextFieldIdCliente.grabFocus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Código do cliente não cadastrado", "Atenção", JOptionPane.WARNING_MESSAGE);
            jTextFieldIdCliente.setText("");
            jTextFieldIdCliente.grabFocus();
            return;
        }

        jTextFieldNomeCliente.setText(cliente.getNome());
        List<Veiculo> vei = cliente.getVeiculos();
        jComboBoxVeiculo.removeAllItems();
        for (Veiculo vr : vei) {
            jComboBoxVeiculo.addItem(vr);
        }



    }//GEN-LAST:event_jTextFieldIdClienteFocusLost

    private void jButtonPesquisaClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisaClientActionPerformed
        final JDialogConsCliente consulta = new JDialogConsCliente(this, true);
        consulta.setLocationRelativeTo(consulta);
        consulta.setVisible(true);

        consulta.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                cliente = consulta.cliente;
                try {
                    TransactionManager.beginTransaction();
                    cliente = new DaoGenerics<Cliente>(Cliente.class).retrieve(cliente.getId());
                    TransactionManager.commit();
                } catch (Exception ex) {
                    Logger.getLogger(JDialogCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTextFieldIdCliente.setText(Integer.toString(cliente.getId()));
                jTextFieldNomeCliente.setText(cliente.getNome());

                List<Veiculo> vei = cliente.getVeiculos();
                jComboBoxVeiculo.removeAllItems();
                for (Veiculo vr : vei) {
                    jComboBoxVeiculo.addItem(vr);
                }



            }
        });
    }//GEN-LAST:event_jButtonPesquisaClientActionPerformed

    private void jTextFieldIdClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdClienteActionPerformed

    private void jButtonPesquisarFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarFuncionarioActionPerformed
        final JDialogConsFuncionario consulta = new JDialogConsFuncionario(this, true);
        consulta.setLocationRelativeTo(consulta);
        consulta.setVisible(true);

        consulta.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                funcionario = consulta.funcionario;
                try {
                    TransactionManager.beginTransaction();
                    funcionario = new DaoGenerics<Funcionario>(Funcionario.class).retrieve(funcionario.getId());
                    TransactionManager.commit();
                } catch (Exception ex) {
                    Logger.getLogger(JDialogFuncionario.class.getName()).log(Level.SEVERE, null, ex);
                }
                jTextFieldiDfuncionario.setText(Integer.toString(funcionario.getId()));
                jTextFieldNomeFuncionario.setText(funcionario.getNome());

            }
        });
    }//GEN-LAST:event_jButtonPesquisarFuncionarioActionPerformed

    private void jTextFieldiDfuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldiDfuncionarioFocusLost
        int id_funcionario = 0;

        try {
            id_funcionario = Integer.parseInt(jTextFieldiDfuncionario.getText().trim());
        } catch (Exception e) {
            return;
        }

        try {
            funcionario = new DaoGenerics<Funcionario>(Funcionario.class).retrieve(id_funcionario);
            if (funcionario.getId() == 0) {
                JOptionPane.showMessageDialog(null, "Código do funcionário não cadastrado", "Atenção", JOptionPane.WARNING_MESSAGE);
                jTextFieldiDfuncionario.setText("");
                jTextFieldiDfuncionario.grabFocus();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Código do funcionário não cadastrado", "Atenção", JOptionPane.WARNING_MESSAGE);
            jTextFieldiDfuncionario.setText("");
            jTextFieldiDfuncionario.grabFocus();
            return;
        }

        jTextFieldNomeFuncionario.setText(funcionario.getNome());
    }//GEN-LAST:event_jTextFieldiDfuncionarioFocusLost

    private void jTextFieldiDfuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldiDfuncionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldiDfuncionarioActionPerformed

    private void jButtonSairCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairCadActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairCadActionPerformed

    private void jFormattedTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldPesquisaActionPerformed

    private void jButtonAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddClienteActionPerformed
        JDialogCliente cadCliente = new JDialogCliente(this, true);
        cadCliente.setLocationRelativeTo(cadCliente);
        cadCliente.setVisible(true);
    }//GEN-LAST:event_jButtonAddClienteActionPerformed

    private void jButtonAddFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddFuncionarioActionPerformed
        JDialogFuncionario cadFuncionario = new JDialogFuncionario(this, true);
        cadFuncionario.setLocationRelativeTo(cadFuncionario);
        cadFuncionario.setVisible(true);
    }//GEN-LAST:event_jButtonAddFuncionarioActionPerformed

    private void jTableConsultaSSMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConsultaSSMousePressed
        // TODO add your handling code here:
        int linha = jTableConsultaSS.getSelectedRow();
        solicitacaoServico = solicitacaoServicos.get(linha);
        if (solicitacaoServico.getStatus().equals("Em Andamento") || solicitacaoServico.getStatus().equals("Encerrado")) {
            jButtonGerarOrdem.setEnabled(false);
            jButtonExcluirSSAberto.setEnabled(false);
        } else {
            jButtonGerarOrdem.setEnabled(true);
            jButtonExcluirSSAberto.setEnabled(true);
        }

    }//GEN-LAST:event_jTableConsultaSSMousePressed

    private void jButtonExcluirSSAbertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirSSAbertoActionPerformed
        String[] opcoes = {"Sim", "Não"};
        int opcao = JOptionPane.showOptionDialog(null, "Tem certeza que deseja excluir?", "Confirmação",
                JOptionPane.YES_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[1]);

        if (JOptionPane.OK_OPTION == opcao) {
            int linha = jTableConsultaSS.getSelectedRow();

            if (linha < 0) {
                return;
            }

            SolicitacaoServico ss = new SolicitacaoServico();

            ss = solicitacaoServicos.get(linha);

            if (ss.getId() != 0) {
                try {
                    TransactionManager.beginTransaction();
                    new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).delete(ss);
                    TransactionManager.commit();
                } catch (Exception ex) {
                    Logger.getLogger(JDialogCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            solicitacaoServicos.remove(linha);
        }
        preencherjTable();

    }//GEN-LAST:event_jButtonExcluirSSAbertoActionPerformed

    private void jTableConsultaSSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableConsultaSSKeyPressed
        int linha = jTableConsultaSS.getSelectedRow();
        solicitacaoServico = solicitacaoServicos.get(linha);
        if (solicitacaoServico.getStatus().equals("Em Andamento") || solicitacaoServico.getStatus().equals("Encerrado")) {
            jButtonGerarOrdem.setEnabled(false);
            jButtonExcluirSSAberto.setEnabled(false);
        } else {
            jButtonGerarOrdem.setEnabled(true);
            jButtonExcluirSSAberto.setEnabled(true);
        }
    }//GEN-LAST:event_jTableConsultaSSKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialogSolicitacaoServico dialog = new JDialogSolicitacaoServico(new javax.swing.JFrame(), true, false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCliente;
    private javax.swing.JButton jButtonAddFuncionario;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluirSSAberto;
    private javax.swing.JButton jButtonGerarOrdem;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JButton jButtonIncluir;
    private javax.swing.JButton jButtonPesquisaClient;
    private javax.swing.JButton jButtonPesquisarCliente1;
    private javax.swing.JButton jButtonPesquisarFuncionario;
    private javax.swing.JButton jButtonSairCad;
    private javax.swing.JButton jButtonSairConsul;
    private javax.swing.JComboBox jComboBoxStatus;
    private javax.swing.JComboBox jComboBoxTipoConsultaSS;
    private javax.swing.JComboBox jComboBoxTipoServico;
    private javax.swing.JComboBox jComboBoxVeiculo;
    private javax.swing.JFormattedTextField jFormattedTextFieldData;
    private javax.swing.JFormattedTextField jFormattedTextFieldPesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCodCliente;
    private javax.swing.JLabel jLabelCpfCliente;
    private javax.swing.JLabel jLabelDataNascCliente;
    private javax.swing.JLabel jLabelEmailCliente;
    private javax.swing.JLabel jLabelNomeCliente;
    private javax.swing.JLabel jLabelTelComercialCliente;
    private javax.swing.JLabel jLabelTelPessoalCliente;
    private javax.swing.JPanel jPanelCadastro;
    private javax.swing.JPanel jPanelConsulta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableConsultaSS;
    private javax.swing.JTextArea jTextAreaObs;
    private javax.swing.JTextField jTextFieldHora;
    private javax.swing.JTextField jTextFieldIdCliente;
    private javax.swing.JTextField jTextFieldIdSS;
    private javax.swing.JTextField jTextFieldNomeCliente;
    private javax.swing.JTextField jTextFieldNomeFuncionario;
    private javax.swing.JTextField jTextFieldiDfuncionario;
    // End of variables declaration//GEN-END:variables

    public void gravar() {
        solicitacaoServico = null;

        if (jTextFieldIdSS.getText().isEmpty()) {
            solicitacaoServico = new SolicitacaoServico();
        } else {
            try {
                solicitacaoServico = new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).retrieve(Integer.parseInt(jTextFieldIdSS.getText()));
            } catch (Exception ex) {
                Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        TransactionManager.beginTransaction();
        solicitacaoServico.setData(converteData.toDate(jFormattedTextFieldData.getText().trim()));
        solicitacaoServico.setHorario(jTextFieldHora.getText().trim());
        solicitacaoServico.setStatus(jComboBoxStatus.getSelectedItem().toString());
        solicitacaoServico.setCliente(cliente);
        solicitacaoServico.setVeiculo(veiculo);
        solicitacaoServico.setFuncionario(funcionario);
        solicitacaoServico.setTipoServico(tipoServico);
        solicitacaoServico.setObs(jTextAreaObs.getText().trim());
        try {


            new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).persist(solicitacaoServico);
        } catch (Exception ex) {
            Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(Level.SEVERE, null, ex);
        }

        TransactionManager.commit();
    }

    private void preencherTipoServico() {
        jComboBoxTipoServico.removeAllItems();
        try {
            tipoServicos = new DaoGenerics<TipoServico>(TipoServico.class).list();
        } catch (Exception ex) {
            Logger.getLogger(JDialogSolicitacaoServico.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (TipoServico tp : tipoServicos) {
            jComboBoxTipoServico.addItem(tp);
        }

    }

    private void HoraData() {
        SimpleDateFormat hora = new SimpleDateFormat("HH:mm:aa");
        SimpleDateFormat data = new SimpleDateFormat("dd/MM/yyyy");

        jTextFieldHora.setText(hora.format(Calendar.getInstance().getTime()));
        jFormattedTextFieldData.setText(data.format(Calendar.getInstance().getTime()));
    }

    private void pesquisa() {
        solicitacaoServicos = new ArrayList<>();

        switch (jComboBoxTipoConsultaSS.getSelectedIndex()) {
            case 0:
                try {
                    solicitacaoServicos = new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).list(new Filter("id", Operator.LIKE, jFormattedTextFieldPesquisa.getText()));
                } catch (Exception ex) {
                    Logger.getLogger(JDialogConsCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;

            case 1:
                try {
                    solicitacaoServicos = new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).execute("select s from SolicitacaoServico s where s.funcionario.nome like '%" + jFormattedTextFieldPesquisa.getText() + "%'");
                } catch (Exception ex) {
                    Logger.getLogger(JDialogConsCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;

            case 2:
                try {
                    solicitacaoServicos = new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).execute("select s from SolicitacaoServico s where s.cliente.nome like '%" + jFormattedTextFieldPesquisa.getText() + "%'");
                } catch (Exception ex) {
                    Logger.getLogger(JDialogConsCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
                
                case 3:
                try {
                    solicitacaoServicos = new DaoGenerics<SolicitacaoServico>(SolicitacaoServico.class).execute("select s from SolicitacaoServico s where status = '" + jFormattedTextFieldPesquisa.getText() + "'");
                } catch (Exception ex) {
                    Logger.getLogger(JDialogConsCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                break;
        }
        preencherjTable();
    }

    private void preencherjTable() {
        tabelaConsulta.setNumRows(0);

        for (SolicitacaoServico obj : solicitacaoServicos) {
            tabelaConsulta.addRow(new Object[]{
                obj.getId(),
                obj.getStatus(),
                obj.getData(),
                obj.getFuncionario(),
                obj.getTipoServico(),
                obj.getCliente(),
                obj.getVeiculo()
            //    obj.getEmail()
            });
        }
    }

    private void habilitaCampos(boolean comando) {
        jButtonIncluir.setEnabled(!comando);

        jButtonCancelar.setEnabled(comando);
        jButtonGravar.setEnabled(comando);
        jButtonSairConsul.setEnabled(comando);
        jButtonGerarOrdem.setEnabled(comando);

        jTextFieldIdSS.setEnabled(!comando);
        jFormattedTextFieldData.setEnabled(!comando);
        jTextFieldHora.setEnabled(!comando);
        jComboBoxStatus.setEnabled(!comando);
        jTextFieldiDfuncionario.setEnabled(comando);
        jTextFieldNomeFuncionario.setEnabled(!comando);
        jButtonPesquisarFuncionario.setEnabled(comando);
        jButtonAddFuncionario.setEnabled(comando);
        jTextFieldIdCliente.setEnabled(comando);
        jTextFieldNomeCliente.setEnabled(!comando);
        jButtonPesquisaClient.setEnabled(comando);
        jButtonAddCliente.setEnabled(comando);
        jComboBoxTipoServico.setEnabled(comando);
        jComboBoxVeiculo.setEnabled(comando);
        jTextAreaObs.setEnabled(comando);

    }

    private boolean validaCampos() {
        StringBuilder msgs = new StringBuilder();

        if (jTextFieldiDfuncionario.getText().isEmpty() && jTextFieldNomeFuncionario.getText().isEmpty()) {
            msgs.append("Funcionário é Obrigatório!\n");
            jTextFieldiDfuncionario.grabFocus();
            jTextFieldiDfuncionario.setBorder(new LineBorder(Color.red));
            jTextFieldNomeFuncionario.setBorder(new LineBorder(Color.red));
        }
        if (jTextFieldIdCliente.getText().isEmpty() && jTextFieldNomeCliente.getText().isEmpty()) {
            msgs.append("Cliente é Obrigatório!\n");
            jTextFieldIdCliente.grabFocus();
            jTextFieldIdCliente.setBorder(new LineBorder(Color.red));
            jTextFieldNomeCliente.setBorder(new LineBorder(Color.red));
        }

        if (msgs.length() > 0) {
            JOptionPane.showMessageDialog(null, msgs.toString(), "Atençao!", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    private void clearCampos() {
        jFormattedTextFieldData.setText("");
        jTextFieldHora.setText("");
        jTextFieldiDfuncionario.setText("");
        jTextFieldNomeFuncionario.setText("");
        jTextFieldIdCliente.setText("");
        jTextFieldNomeCliente.setText("");
        jTextAreaObs.setText("");
    }
}
